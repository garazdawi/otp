##
## This docker file will build a base image for building Erlang/OTP
##
FROM ubuntu:20.04

ENV INSTALL_LIBS="zlib1g-dev libncurses5-dev libssl-dev unixodbc-dev libgmp3-dev libwxbase3.0-dev libwxgtk3.0-gtk3-dev libwxgtk-webview3.0-gtk3-dev libsctp-dev lksctp-tools"

ENV DEBIAN_FRONTEND=noninteractive
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8

RUN apt-get update && \
    apt-get -y upgrade && \
    apt-get install -y build-essential m4 autoconf fop xsltproc clang clang-format \
    default-jdk libxml2-utils unixodbc odbc-postgresql postgresql \
    tzdata ssh openssh-server groff-base sudo gdb apache2 bind9 expect vsftpd python \
    $INSTALL_LIBS && \
    sed -i 's@# en_US.UTF-8@en_US.UTF-8@g' /etc/locale.gen && locale-gen

RUN update-alternatives --set wx-config /usr/lib/x86_64-linux-gnu/wx/config/gtk3-unicode-3.0

ENV LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8

ARG gid=10
ARG uid=421

RUN echo "Europe/Stockholm" > /etc/timezone && \
    ln -snf /usr/share/zoneinfo/$(cat /etc/timezone) /etc/localtime && \
    useradd -rm -d /home/otptest -s /bin/sh -g ${gid} -G ${gid},sudo -u ${uid} otptest && \
    echo "otptest ALL=(ALL:ALL) NOPASSWD: ALL" > /etc/sudoers.d/otptest && \
    echo "/tests/** r," >> /etc/apparmor.d/local/usr.sbin.named

USER postgres

RUN service postgresql start && \
    psql -c "CREATE USER odbctest WITH SUPERUSER PASSWORD 'odbctest';" && \
    createdb -O odbctest odbctest && \
    service postgresql stop

COPY --chown=root:uucp dockerfiles/odbc.ini /etc/
COPY --chown=root:uucp dockerfiles/odbcinst.ini /etc/

USER otptest

COPY --chown=otptest:uucp dockerfiles/log4j.properties /home/otptest/
ENV OTP_STRICT_INSTALL=yes \
    JAVA_ARGS="-Dlog4j.configuration=file://home/otptest/log4j.properties"

COPY --chown=otptest:uucp dockerfiles/init.sh /home/otptest/

RUN sudo mkdir /buildroot /tests && sudo chown otptest:uucp /buildroot /tests
